#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ALPHA 0
#define NUM   1
#define FUNC  2

//DEFINE THE TAPPING TIME FOR MODTAP
&mt {
    tapping-term-ms = <400>;
};

//COMBOS 
/ {
    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <30 32>;
            bindings = <&kp TAB>;
        };

        combo_ctrlBspc {
            timeout-ms = <50>;
            key-positions = <30 33>;
            bindings = <&kp LC(BSPC)>;
        };
    };
};

&sk {
    ignore-modifiers;
};


//HOLD TAP
/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = < 250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};


/ {
    keymap {
        compatible = "zmk,keymap";

        alpha_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//                     |    W    |    F    |    P    |    B    |                              |    J    |    L    |    U    |    Y    |
// |    Q    | A [WIN] | R [ALT] | S[CTRL] | T[SHIFT]|    G    |                              |    M    | N[SHIFT]| E[CTRL] | I [ALT] | O [WIN] |    ' "  |
//           | Z [UNDO]| X [CUT] | C[COPY] |    D    | V[PASTE]|                              |    K    |    H    |    <,   |    .>   |    /?   |
//                                         |  SPACE  |ESC [NUM]|                              |ENT[FUNC]|   DEL   |
            bindings = <
                        &kp W         &kp F           &kp P           &kp B                     &kp J          &kp L           &kp U           &kp Y    
    &kp Q   &mt LWIN A  &mt LALT R    &mt LCTRL S     &mt LSHFT T     &kp G                     &kp M          &mt RSHFT N    &mt RCTRL E     &mt RALT I     &mt RWIN O    &kp SQT
            &hm LC(Z) Z &hm LC(X) X   &hm LC(C) C     &kp D           &hm LC(V) V               &kp K          &kp H           &kp COMMA       &kp DOT           &kp FSLH 
                                                      &kp SPACE       &lt NUM ESC               &lt FUNC RET   &kp BSPC
            >;
        };

        num_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//                     |     7   |     8   |    9   |   [{    |                             |   }]     |         |    UP      |           |
// |  SHIFT  |     0   |     4   |     5   |    6   |   ;:    |                             |   +=     |  LEFT   |   DOWN     |  RIGHT    |   P UP    |  SHIFT   |
//           |         |     1   |     2   |    3   |   `~    |                             |   \|     |  HOME   |   END      |    CAPS   |  P DOWN   |
//                                         |  SPACE |ESC [NUM]|                             |ENT[FUNC] |   DEL   |
            bindings = <
                         &kp N7     &kp N8   &kp N9   &kp LBKT                                &kp RBKT   &none      &kp UP      &none    
    &sk LSHIFT  &kp N0   &kp N4     &kp N5   &kp N6   &kp SEMI                                &kp EQUAL  &kp LEFT   &kp DOWN    &kp RIGHT   &kp PG_UP  &sk LSHIFT
                &none    &kp N1     &kp N2   &kp N3   &kp GRAVE                               &kp BSLH   &kp HOME   &kp END     &kp CLCK    &kp PG_DN
                                             &trans   &trans                                  &trans     &trans
            >;
        };

        func_layer {
// --------------------------------------------------------------------------------------------------------------------------------------------------------------------
//                     |    F7   |    F8   |   F9   | VOL - + |                             |          |         |            |           |
// |  F12    |    F11  |    F4   |    F5   |   F6   |PLAY PAUS|                             |          |  SHIFT  |     CTRL   |    ALT    |    WIN    |          |
//           |    F10  |    F1   |    F2   |   F3   |NEXT PREV|                             | CLEAR BT |  BT 0   |     BT 1   |   BT 2    |   BT 3    |
//                                         |  SPACE |ESC [NUM]|                             |ENT[FUNC] |   DEL   |
            bindings = <
                         &kp F7     &kp F8   &kp F9   &hm C_VOL_UP C_VOL_DN                 &none       &none          &none            &none    
    &kp F12    &kp F11   &kp F4     &kp F5   &kp F6   &kp C_PP                              &none       &kp RSHFT      &kp RCTRL        &kp RALT        &kp RWIN      &none
               &kp F10   &kp F1     &kp F2   &kp F3   &hm C_NEXT C_PREV                     &bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1     &bt BT_SEL 2    &bt BT_SEL 3
                                             &trans   &trans                                &trans      &trans
            >;
        };
    };
}; 